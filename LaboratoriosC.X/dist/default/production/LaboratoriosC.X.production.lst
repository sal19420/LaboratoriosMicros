

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 08 23:20:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0018                     _RCSTAbits	set	24
   207  000B                     _INTCONbits	set	11
   208  000C                     _PIR1bits	set	12
   209  0006                     _PORTB	set	6
   210  0005                     _PORTA	set	5
   211  001A                     _RCREG	set	26
   212  0019                     _TXREG	set	25
   213  0065                     _RCIF	set	101
   214  0064                     _TXIF	set	100
   215  009A                     _SPBRGH	set	154
   216  0099                     _SPBRG	set	153
   217  0098                     _TXSTAbits	set	152
   218  008C                     _PIE1bits	set	140
   219  008F                     _OSCCONbits	set	143
   220  0086                     _TRISB	set	134
   221  0085                     _TRISA	set	133
   222  0187                     _BAUDCTLbits	set	391
   223  0189                     _ANSELH	set	393
   224  0188                     _ANSEL	set	392
   225                           
   226                           	psect	strings
   227  0003                     __pstrings:
   228  0003                     stringtab:
   229  0003                     __stringtab:
   230                           
   231                           ;	String table - string pointers are 2 bytes each
   232  0003  1BFF               	btfsc	btemp+1,7
   233  0004  280D               	ljmp	stringcode
   234  0005  1383               	bcf	3,7
   235  0006  187F               	btfsc	btemp+1,0
   236  0007  1783               	bsf	3,7
   237  0008  0800               	movf	0,w
   238  0009  0A84               	incf	4,f
   239  000A  1903               	skipnz
   240  000B  0AFF               	incf	btemp+1,f
   241  000C  0008               	return
   242  000D                     stringcode:
   243  000D  087F               	movf	btemp+1,w
   244  000E  397F               	andlw	127
   245  000F  008A               	movwf	10
   246  0010  0804               	movf	4,w
   247  0011  0A84               	incf	4,f
   248  0012  1903               	skipnz
   249  0013  0AFF               	incf	btemp+1,f
   250  0014  0082               	movwf	2
   251  0015                     __stringbase:
   252  0015                     __end_of__stringtab:
   253                           
   254                           	psect	stringtext
   255  0800                     __pstringtext:
   256  0800                     STR_7:
   257  0800  340D               	retlw	13
   258  0801  3420               	retlw	32	;' '
   259  0802  3449               	retlw	73	;'I'
   260  0803  346E               	retlw	110	;'n'
   261  0804  3473               	retlw	115	;'s'
   262  0805  3465               	retlw	101	;'e'
   263  0806  3472               	retlw	114	;'r'
   264  0807  3474               	retlw	116	;'t'
   265  0808  3461               	retlw	97	;'a'
   266  0809  3472               	retlw	114	;'r'
   267  080A  3420               	retlw	32	;' '
   268  080B  3463               	retlw	99	;'c'
   269  080C  3461               	retlw	97	;'a'
   270  080D  3472               	retlw	114	;'r'
   271  080E  3461               	retlw	97	;'a'
   272  080F  3463               	retlw	99	;'c'
   273  0810  3474               	retlw	116	;'t'
   274  0811  3465               	retlw	101	;'e'
   275  0812  3472               	retlw	114	;'r'
   276  0813  3420               	retlw	32	;' '
   277  0814  3470               	retlw	112	;'p'
   278  0815  3461               	retlw	97	;'a'
   279  0816  3472               	retlw	114	;'r'
   280  0817  3461               	retlw	97	;'a'
   281  0818  3420               	retlw	32	;' '
   282  0819  3463               	retlw	99	;'c'
   283  081A  346F               	retlw	111	;'o'
   284  081B  346C               	retlw	108	;'l'
   285  081C  346F               	retlw	111	;'o'
   286  081D  3463               	retlw	99	;'c'
   287  081E  3461               	retlw	97	;'a'
   288  081F  3472               	retlw	114	;'r'
   289  0820  3420               	retlw	32	;' '
   290  0821  3465               	retlw	101	;'e'
   291  0822  346E               	retlw	110	;'n'
   292  0823  3420               	retlw	32	;' '
   293  0824  3450               	retlw	80	;'P'
   294  0825  344F               	retlw	79	;'O'
   295  0826  3452               	retlw	82	;'R'
   296  0827  3454               	retlw	84	;'T'
   297  0828  3441               	retlw	65	;'A'
   298  0829  343A               	retlw	58	;':'
   299  082A  3420               	retlw	32	;' '
   300  082B  340D               	retlw	13
   301  082C  3400               	retlw	0
   302  082D                     STR_8:
   303  082D  340D               	retlw	13
   304  082E  3420               	retlw	32	;' '
   305  082F  3449               	retlw	73	;'I'
   306  0830  346E               	retlw	110	;'n'
   307  0831  3473               	retlw	115	;'s'
   308  0832  3465               	retlw	101	;'e'
   309  0833  3472               	retlw	114	;'r'
   310  0834  3474               	retlw	116	;'t'
   311  0835  3461               	retlw	97	;'a'
   312  0836  3472               	retlw	114	;'r'
   313  0837  3420               	retlw	32	;' '
   314  0838  3463               	retlw	99	;'c'
   315  0839  3461               	retlw	97	;'a'
   316  083A  3472               	retlw	114	;'r'
   317  083B  3461               	retlw	97	;'a'
   318  083C  3463               	retlw	99	;'c'
   319  083D  3474               	retlw	116	;'t'
   320  083E  3465               	retlw	101	;'e'
   321  083F  3472               	retlw	114	;'r'
   322  0840  3420               	retlw	32	;' '
   323  0841  3470               	retlw	112	;'p'
   324  0842  3461               	retlw	97	;'a'
   325  0843  3472               	retlw	114	;'r'
   326  0844  3461               	retlw	97	;'a'
   327  0845  3420               	retlw	32	;' '
   328  0846  3463               	retlw	99	;'c'
   329  0847  346F               	retlw	111	;'o'
   330  0848  346C               	retlw	108	;'l'
   331  0849  346F               	retlw	111	;'o'
   332  084A  3463               	retlw	99	;'c'
   333  084B  3461               	retlw	97	;'a'
   334  084C  3472               	retlw	114	;'r'
   335  084D  3420               	retlw	32	;' '
   336  084E  3465               	retlw	101	;'e'
   337  084F  346E               	retlw	110	;'n'
   338  0850  3420               	retlw	32	;' '
   339  0851  3450               	retlw	80	;'P'
   340  0852  344F               	retlw	79	;'O'
   341  0853  3452               	retlw	82	;'R'
   342  0854  3454               	retlw	84	;'T'
   343  0855  3442               	retlw	66	;'B'
   344  0856  343A               	retlw	58	;':'
   345  0857  3420               	retlw	32	;' '
   346  0858  340D               	retlw	13
   347  0859  3400               	retlw	0
   348  085A                     STR_6:
   349  085A  340D               	retlw	13
   350  085B  3420               	retlw	32	;' '
   351  085C  3457               	retlw	87	;'W'
   352  085D  3441               	retlw	65	;'A'
   353  085E  344F               	retlw	79	;'O'
   354  085F  3420               	retlw	32	;' '
   355  0860  3453               	retlw	83	;'S'
   356  0861  3449               	retlw	73	;'I'
   357  0862  3445               	retlw	69	;'E'
   358  0863  344E               	retlw	78	;'N'
   359  0864  3454               	retlw	84	;'T'
   360  0865  344F               	retlw	79	;'O'
   361  0866  3420               	retlw	32	;' '
   362  0867  3451               	retlw	81	;'Q'
   363  0868  3455               	retlw	85	;'U'
   364  0869  3445               	retlw	69	;'E'
   365  086A  3420               	retlw	32	;' '
   366  086B  344D               	retlw	77	;'M'
   367  086C  3445               	retlw	69	;'E'
   368  086D  3420               	retlw	32	;' '
   369  086E  3447               	retlw	71	;'G'
   370  086F  3455               	retlw	85	;'U'
   371  0870  3453               	retlw	83	;'S'
   372  0871  3454               	retlw	84	;'T'
   373  0872  3441               	retlw	65	;'A'
   374  0873  3420               	retlw	32	;' '
   375  0874  3444               	retlw	68	;'D'
   376  0875  3445               	retlw	69	;'E'
   377  0876  344D               	retlw	77	;'M'
   378  0877  3441               	retlw	65	;'A'
   379  0878  3453               	retlw	83	;'S'
   380  0879  3449               	retlw	73	;'I'
   381  087A  3441               	retlw	65	;'A'
   382  087B  3455               	retlw	85	;'U'
   383  087C  3455               	retlw	85	;'U'
   384  087D  3455               	retlw	85	;'U'
   385  087E  3455               	retlw	85	;'U'
   386  087F  3420               	retlw	32	;' '
   387  0880  340D               	retlw	13
   388  0881  3400               	retlw	0
   389  0882                     STR_2:
   390  0882  340D               	retlw	13
   391  0883  3420               	retlw	32	;' '
   392  0884  3431               	retlw	49	;'1'
   393  0885  342E               	retlw	46	;'.'
   394  0886  3420               	retlw	32	;' '
   395  0887  3444               	retlw	68	;'D'
   396  0888  3465               	retlw	101	;'e'
   397  0889  3473               	retlw	115	;'s'
   398  088A  3470               	retlw	112	;'p'
   399  088B  346C               	retlw	108	;'l'
   400  088C  3465               	retlw	101	;'e'
   401  088D  3467               	retlw	103	;'g'
   402  088E  3461               	retlw	97	;'a'
   403  088F  3472               	retlw	114	;'r'
   404  0890  3420               	retlw	32	;' '
   405  0891  3463               	retlw	99	;'c'
   406  0892  3461               	retlw	97	;'a'
   407  0893  3464               	retlw	100	;'d'
   408  0894  3465               	retlw	101	;'e'
   409  0895  346E               	retlw	110	;'n'
   410  0896  3461               	retlw	97	;'a'
   411  0897  3420               	retlw	32	;' '
   412  0898  3464               	retlw	100	;'d'
   413  0899  3465               	retlw	101	;'e'
   414  089A  3420               	retlw	32	;' '
   415  089B  3463               	retlw	99	;'c'
   416  089C  3461               	retlw	97	;'a'
   417  089D  3472               	retlw	114	;'r'
   418  089E  3461               	retlw	97	;'a'
   419  089F  3463               	retlw	99	;'c'
   420  08A0  3474               	retlw	116	;'t'
   421  08A1  3465               	retlw	101	;'e'
   422  08A2  3472               	retlw	114	;'r'
   423  08A3  3465               	retlw	101	;'e'
   424  08A4  3473               	retlw	115	;'s'
   425  08A5  343A               	retlw	58	;':'
   426  08A6  3420               	retlw	32	;' '
   427  08A7  340D               	retlw	13
   428  08A8  3400               	retlw	0
   429  08A9                     STR_9:
   430  08A9  340D               	retlw	13
   431  08AA  3420               	retlw	32	;' '
   432  08AB  3443               	retlw	67	;'C'
   433  08AC  346F               	retlw	111	;'o'
   434  08AD  346C               	retlw	108	;'l'
   435  08AE  346F               	retlw	111	;'o'
   436  08AF  3463               	retlw	99	;'c'
   437  08B0  3461               	retlw	97	;'a'
   438  08B1  3472               	retlw	114	;'r'
   439  08B2  3420               	retlw	32	;' '
   440  08B3  3477               	retlw	119	;'w'
   441  08B4  3461               	retlw	97	;'a'
   442  08B5  346F               	retlw	111	;'o'
   443  08B6  3420               	retlw	32	;' '
   444  08B7  3465               	retlw	101	;'e'
   445  08B8  346E               	retlw	110	;'n'
   446  08B9  3420               	retlw	32	;' '
   447  08BA  3479               	retlw	121	;'y'
   448  08BB  346F               	retlw	111	;'o'
   449  08BC  3475               	retlw	117	;'u'
   450  08BD  3474               	retlw	116	;'t'
   451  08BE  3475               	retlw	117	;'u'
   452  08BF  3462               	retlw	98	;'b'
   453  08C0  3465               	retlw	101	;'e'
   454  08C1  3420               	retlw	32	;' '
   455  08C2  340D               	retlw	13
   456  08C3  3400               	retlw	0
   457  08C4                     STR_3:
   458  08C4  340D               	retlw	13
   459  08C5  3420               	retlw	32	;' '
   460  08C6  3432               	retlw	50	;'2'
   461  08C7  342E               	retlw	46	;'.'
   462  08C8  3420               	retlw	32	;' '
   463  08C9  3444               	retlw	68	;'D'
   464  08CA  3465               	retlw	101	;'e'
   465  08CB  3473               	retlw	115	;'s'
   466  08CC  3470               	retlw	112	;'p'
   467  08CD  346C               	retlw	108	;'l'
   468  08CE  3465               	retlw	101	;'e'
   469  08CF  3467               	retlw	103	;'g'
   470  08D0  3461               	retlw	97	;'a'
   471  08D1  3472               	retlw	114	;'r'
   472  08D2  3420               	retlw	32	;' '
   473  08D3  3450               	retlw	80	;'P'
   474  08D4  344F               	retlw	79	;'O'
   475  08D5  3452               	retlw	82	;'R'
   476  08D6  3454               	retlw	84	;'T'
   477  08D7  3441               	retlw	65	;'A'
   478  08D8  343A               	retlw	58	;':'
   479  08D9  3420               	retlw	32	;' '
   480  08DA  340D               	retlw	13
   481  08DB  3400               	retlw	0
   482  08DC                     STR_4:
   483  08DC  340D               	retlw	13
   484  08DD  3420               	retlw	32	;' '
   485  08DE  3433               	retlw	51	;'3'
   486  08DF  342E               	retlw	46	;'.'
   487  08E0  3420               	retlw	32	;' '
   488  08E1  3444               	retlw	68	;'D'
   489  08E2  3465               	retlw	101	;'e'
   490  08E3  3473               	retlw	115	;'s'
   491  08E4  3470               	retlw	112	;'p'
   492  08E5  346C               	retlw	108	;'l'
   493  08E6  3465               	retlw	101	;'e'
   494  08E7  3467               	retlw	103	;'g'
   495  08E8  3461               	retlw	97	;'a'
   496  08E9  3472               	retlw	114	;'r'
   497  08EA  3420               	retlw	32	;' '
   498  08EB  3450               	retlw	80	;'P'
   499  08EC  344F               	retlw	79	;'O'
   500  08ED  3452               	retlw	82	;'R'
   501  08EE  3454               	retlw	84	;'T'
   502  08EF  3442               	retlw	66	;'B'
   503  08F0  343A               	retlw	58	;':'
   504  08F1  3420               	retlw	32	;' '
   505  08F2  340D               	retlw	13
   506  08F3  3400               	retlw	0
   507  08F4                     STR_1:
   508  08F4  340D               	retlw	13
   509  08F5  3420               	retlw	32	;' '
   510  08F6  3445               	retlw	69	;'E'
   511  08F7  3473               	retlw	115	;'s'
   512  08F8  3463               	retlw	99	;'c'
   513  08F9  346F               	retlw	111	;'o'
   514  08FA  3467               	retlw	103	;'g'
   515  08FB  3461               	retlw	97	;'a'
   516  08FC  3420               	retlw	32	;' '
   517  08FD  3475               	retlw	117	;'u'
   518  08FE  346E               	retlw	110	;'n'
   519  08FF  3461               	retlw	97	;'a'
   520  0900  3420               	retlw	32	;' '
   521  0901  346F               	retlw	111	;'o'
   522  0902  3470               	retlw	112	;'p'
   523  0903  3463               	retlw	99	;'c'
   524  0904  3469               	retlw	105	;'i'
   525  0905  346F               	retlw	111	;'o'
   526  0906  346E               	retlw	110	;'n'
   527  0907  343A               	retlw	58	;':'
   528  0908  3420               	retlw	32	;' '
   529  0909  340D               	retlw	13
   530  090A  3400               	retlw	0
   531  090B                     STR_5:
   532  090B  340D               	retlw	13
   533  090C  3420               	retlw	32	;' '
   534  090D  3434               	retlw	52	;'4'
   535  090E  342E               	retlw	46	;'.'
   536  090F  3420               	retlw	32	;' '
   537  0910  3442               	retlw	66	;'B'
   538  0911  344F               	retlw	79	;'O'
   539  0912  344E               	retlw	78	;'N'
   540  0913  3455               	retlw	85	;'U'
   541  0914  3453               	retlw	83	;'S'
   542  0915  3420               	retlw	32	;' '
   543  0916  340D               	retlw	13
   544  0917  3400               	retlw	0
   545                           
   546                           	psect	cinit
   547  07FC                     start_initialization:	
   548                           ; #config settings
   549                           
   550  07FC                     __initialization:
   551  07FC                     end_of_initialization:	
   552                           ;End of C runtime variable initialization code
   553                           
   554  07FC                     __end_of__initialization:
   555  07FC  0183               	clrf	3
   556  07FD  120A  118A  2EB6   	ljmp	_main	;jump to C main() function
   557                           
   558                           	psect	cstackCOMMON
   559  0070                     __pcstackCOMMON:
   560  0070                     ?_confi:
   561  0070                     ??_confi:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_texto:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_main:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_putch:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ??_putch:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     putch@DATA:	
   577                           ; 1 bytes @ 0x0
   578                           
   579                           
   580                           ; 1 bytes @ 0x0
   581  0070                     	ds	1
   582  0071                     ?_printf:
   583  0071                     printf@f:	
   584                           ; 2 bytes @ 0x1
   585                           
   586                           
   587                           ; 2 bytes @ 0x1
   588  0071                     	ds	2
   589  0073                     ??_printf:
   590                           
   591                           ; 1 bytes @ 0x3
   592  0073                     	ds	3
   593  0076                     printf@ap:
   594                           
   595                           ; 1 bytes @ 0x6
   596  0076                     	ds	1
   597  0077                     printf@c:
   598                           
   599                           ; 1 bytes @ 0x7
   600  0077                     	ds	1
   601  0078                     ??_texto:
   602                           
   603                           ; 1 bytes @ 0x8
   604  0078                     	ds	3
   605  007B                     ??_main:
   606                           
   607                           	psect	maintext
   608  06B6                     __pmaintext:	
   609                           ; 1 bytes @ 0xB
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 41 in file "lab10.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : B00/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         0       0       0       0       0
   633 ;;Total ram usage:        0 bytes
   634 ;; Hardware stack levels required when called:    3
   635 ;; This function calls:
   636 ;;		_confi
   637 ;;		_texto
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _main
   645  06B6                     _main:
   646  06B6                     l826:	
   647                           ;incstack = 0
   648                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   649                           
   650                           
   651                           ;lab10.c: 42:     confi();
   652  06B6  120A  118A  26EA  120A  118A  	fcall	_confi
   653  06BB                     l828:
   654                           
   655                           ;lab10.c: 45:         texto();
   656  06BB  120A  118A  271F  120A  118A  	fcall	_texto
   657  06C0  2EBB               	goto	l828
   658  06C1  120A  118A  2800   	ljmp	start
   659  06C4                     __end_of_main:
   660                           
   661                           	psect	text1
   662  071F                     __ptext1:	
   663 ;; *************** function _texto *****************
   664 ;; Defined at:
   665 ;;		line 57 in file "lab10.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          3       0       0       0       0
   682 ;;      Totals:         3       0       0       0       0
   683 ;;Total ram usage:        3 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    2
   686 ;; This function calls:
   687 ;;		_printf
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _texto
   695  071F                     _texto:
   696  071F                     l788:	
   697                           ;incstack = 0
   698                           ; Regs used in _texto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   699                           
   700                           
   701                           ;lab10.c: 58:     _delay((unsigned long)((250)*(8000000/4000.0)));
   702  071F  3003               	movlw	3
   703  0720  00FA               	movwf	??_texto+2
   704  0721  308A               	movlw	138
   705  0722  00F9               	movwf	??_texto+1
   706  0723  3055               	movlw	85
   707  0724  00F8               	movwf	??_texto
   708  0725                     u187:
   709  0725  0BF8               	decfsz	??_texto,f
   710  0726  2F25               	goto	u187
   711  0727  0BF9               	decfsz	??_texto+1,f
   712  0728  2F25               	goto	u187
   713  0729  0BFA               	decfsz	??_texto+2,f
   714  072A  2F25               	goto	u187
   715  072B  2F2C               	nop2
   716  072C                     l790:
   717                           
   718                           ;lab10.c: 59:     printf("\r Escoga una opcion: \r");
   719  072C  30F4               	movlw	low (STR_1| (0+32768))
   720  072D  00F1               	movwf	printf@f
   721  072E  3088               	movlw	high (STR_1| (0+32768))
   722  072F  00F2               	movwf	printf@f+1
   723  0730  120A  118A  26C4  120A  118A  	fcall	_printf
   724  0735                     l792:
   725                           
   726                           ;lab10.c: 60:      _delay((unsigned long)((250)*(8000000/4000.0)));
   727  0735  3003               	movlw	3
   728  0736  00FA               	movwf	??_texto+2
   729  0737  308A               	movlw	138
   730  0738  00F9               	movwf	??_texto+1
   731  0739  3055               	movlw	85
   732  073A  00F8               	movwf	??_texto
   733  073B                     u197:
   734  073B  0BF8               	decfsz	??_texto,f
   735  073C  2F3B               	goto	u197
   736  073D  0BF9               	decfsz	??_texto+1,f
   737  073E  2F3B               	goto	u197
   738  073F  0BFA               	decfsz	??_texto+2,f
   739  0740  2F3B               	goto	u197
   740  0741  2F42               	nop2
   741                           
   742                           ;lab10.c: 61:     printf("\r 1. Desplegar cadena de caracteres: \r");
   743  0742  3082               	movlw	low (STR_2| (0+32768))
   744  0743  00F1               	movwf	printf@f
   745  0744  3088               	movlw	high (STR_2| (0+32768))
   746  0745  00F2               	movwf	printf@f+1
   747  0746  120A  118A  26C4  120A  118A  	fcall	_printf
   748  074B                     l794:
   749                           
   750                           ;lab10.c: 62:      _delay((unsigned long)((250)*(8000000/4000.0)));
   751  074B  3003               	movlw	3
   752  074C  00FA               	movwf	??_texto+2
   753  074D  308A               	movlw	138
   754  074E  00F9               	movwf	??_texto+1
   755  074F  3055               	movlw	85
   756  0750  00F8               	movwf	??_texto
   757  0751                     u207:
   758  0751  0BF8               	decfsz	??_texto,f
   759  0752  2F51               	goto	u207
   760  0753  0BF9               	decfsz	??_texto+1,f
   761  0754  2F51               	goto	u207
   762  0755  0BFA               	decfsz	??_texto+2,f
   763  0756  2F51               	goto	u207
   764  0757  2F58               	nop2
   765  0758                     l796:
   766                           
   767                           ;lab10.c: 63:     printf("\r 2. Desplegar PORTA: \r");
   768  0758  30C4               	movlw	low (STR_3| (0+32768))
   769  0759  00F1               	movwf	printf@f
   770  075A  3088               	movlw	high (STR_3| (0+32768))
   771  075B  00F2               	movwf	printf@f+1
   772  075C  120A  118A  26C4  120A  118A  	fcall	_printf
   773                           
   774                           ;lab10.c: 64:      _delay((unsigned long)((250)*(8000000/4000.0)));
   775  0761  3003               	movlw	3
   776  0762  00FA               	movwf	??_texto+2
   777  0763  308A               	movlw	138
   778  0764  00F9               	movwf	??_texto+1
   779  0765  3055               	movlw	85
   780  0766  00F8               	movwf	??_texto
   781  0767                     u217:
   782  0767  0BF8               	decfsz	??_texto,f
   783  0768  2F67               	goto	u217
   784  0769  0BF9               	decfsz	??_texto+1,f
   785  076A  2F67               	goto	u217
   786  076B  0BFA               	decfsz	??_texto+2,f
   787  076C  2F67               	goto	u217
   788  076D  2F6E               	nop2
   789  076E                     l798:
   790                           
   791                           ;lab10.c: 65:     printf("\r 3. Desplegar PORTB: \r");
   792  076E  30DC               	movlw	low (STR_4| (0+32768))
   793  076F  00F1               	movwf	printf@f
   794  0770  3088               	movlw	high (STR_4| (0+32768))
   795  0771  00F2               	movwf	printf@f+1
   796  0772  120A  118A  26C4  120A  118A  	fcall	_printf
   797  0777                     l800:
   798                           
   799                           ;lab10.c: 66:      _delay((unsigned long)((250)*(8000000/4000.0)));
   800  0777  3003               	movlw	3
   801  0778  00FA               	movwf	??_texto+2
   802  0779  308A               	movlw	138
   803  077A  00F9               	movwf	??_texto+1
   804  077B  3055               	movlw	85
   805  077C  00F8               	movwf	??_texto
   806  077D                     u227:
   807  077D  0BF8               	decfsz	??_texto,f
   808  077E  2F7D               	goto	u227
   809  077F  0BF9               	decfsz	??_texto+1,f
   810  0780  2F7D               	goto	u227
   811  0781  0BFA               	decfsz	??_texto+2,f
   812  0782  2F7D               	goto	u227
   813  0783  2F84               	nop2
   814                           
   815                           ;lab10.c: 67:     printf("\r 4. BONUS \r");
   816  0784  300B               	movlw	low (STR_5| (0+32768))
   817  0785  00F1               	movwf	printf@f
   818  0786  3089               	movlw	high (STR_5| (0+32768))
   819  0787  00F2               	movwf	printf@f+1
   820  0788  120A  118A  26C4  120A  118A  	fcall	_printf
   821  078D                     l63:	
   822                           ;lab10.c: 68:     while(RCIF == 0);
   823                           
   824  078D  1283               	bcf	3,5	;RP0=0, select bank0
   825  078E  1303               	bcf	3,6	;RP1=0, select bank0
   826  078F  1E8C               	btfss	12,5	;volatile
   827  0790  2F92               	goto	u111
   828  0791  2F93               	goto	u110
   829  0792                     u111:
   830  0792  2F8D               	goto	l63
   831  0793                     u110:
   832  0793                     l802:
   833                           
   834                           ;lab10.c: 70:     if (RCREG =='1'){
   835  0793  3031               	movlw	49
   836  0794  061A               	xorwf	26,w	;volatile
   837  0795  1D03               	btfss	3,2
   838  0796  2F98               	goto	u121
   839  0797  2F99               	goto	u120
   840  0798                     u121:
   841  0798  2FAF               	goto	l808
   842  0799                     u120:
   843  0799                     l804:
   844                           
   845                           ;lab10.c: 71:          _delay((unsigned long)((250)*(8000000/4000.0)));
   846  0799  3003               	movlw	3
   847  079A  00FA               	movwf	??_texto+2
   848  079B  308A               	movlw	138
   849  079C  00F9               	movwf	??_texto+1
   850  079D  3055               	movlw	85
   851  079E  00F8               	movwf	??_texto
   852  079F                     u237:
   853  079F  0BF8               	decfsz	??_texto,f
   854  07A0  2F9F               	goto	u237
   855  07A1  0BF9               	decfsz	??_texto+1,f
   856  07A2  2F9F               	goto	u237
   857  07A3  0BFA               	decfsz	??_texto+2,f
   858  07A4  2F9F               	goto	u237
   859  07A5  2FA6               	nop2
   860  07A6                     l806:
   861                           
   862                           ;lab10.c: 72:          printf("\r WAO SIENTO QUE ME GUSTA DEMASIAUUUU \r");
   863  07A6  305A               	movlw	low (STR_6| (0+32768))
   864  07A7  00F1               	movwf	printf@f
   865  07A8  3088               	movlw	high (STR_6| (0+32768))
   866  07A9  00F2               	movwf	printf@f+1
   867  07AA  120A  118A  26C4  120A  118A  	fcall	_printf
   868  07AF                     l808:
   869                           
   870                           ;lab10.c: 75:     if (RCREG == '2'){
   871  07AF  3032               	movlw	50
   872  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   873  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   874  07B2  061A               	xorwf	26,w	;volatile
   875  07B3  1D03               	btfss	3,2
   876  07B4  2FB6               	goto	u131
   877  07B5  2FB7               	goto	u130
   878  07B6                     u131:
   879  07B6  2FC8               	goto	l814
   880  07B7                     u130:
   881  07B7                     l810:
   882                           
   883                           ;lab10.c: 76:         printf("\r Insertar caracter para colocar en PORTA: \r");
   884  07B7  3000               	movlw	low (STR_7| (0+32768))
   885  07B8  00F1               	movwf	printf@f
   886  07B9  3088               	movlw	high (STR_7| (0+32768))
   887  07BA  00F2               	movwf	printf@f+1
   888  07BB  120A  118A  26C4  120A  118A  	fcall	_printf
   889  07C0                     l68:	
   890                           ;lab10.c: 77:         while (RCIF == 0);
   891                           
   892  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   893  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   894  07C2  1E8C               	btfss	12,5	;volatile
   895  07C3  2FC5               	goto	u141
   896  07C4  2FC6               	goto	u140
   897  07C5                     u141:
   898  07C5  2FC0               	goto	l68
   899  07C6                     u140:
   900  07C6                     l812:
   901                           
   902                           ;lab10.c: 78:         PORTA = RCREG;
   903  07C6  081A               	movf	26,w	;volatile
   904  07C7  0085               	movwf	5	;volatile
   905  07C8                     l814:
   906                           
   907                           ;lab10.c: 81:     if (RCREG == '3'){
   908  07C8  3033               	movlw	51
   909  07C9  061A               	xorwf	26,w	;volatile
   910  07CA  1D03               	btfss	3,2
   911  07CB  2FCD               	goto	u151
   912  07CC  2FCE               	goto	u150
   913  07CD                     u151:
   914  07CD  2FDF               	goto	l820
   915  07CE                     u150:
   916  07CE                     l816:
   917                           
   918                           ;lab10.c: 82:         printf("\r Insertar caracter para colocar en PORTB: \r");
   919  07CE  302D               	movlw	low (STR_8| (0+32768))
   920  07CF  00F1               	movwf	printf@f
   921  07D0  3088               	movlw	high (STR_8| (0+32768))
   922  07D1  00F2               	movwf	printf@f+1
   923  07D2  120A  118A  26C4  120A  118A  	fcall	_printf
   924  07D7                     l72:	
   925                           ;lab10.c: 83:         while (RCIF == 0);
   926                           
   927  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   928  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   929  07D9  1E8C               	btfss	12,5	;volatile
   930  07DA  2FDC               	goto	u161
   931  07DB  2FDD               	goto	u160
   932  07DC                     u161:
   933  07DC  2FD7               	goto	l72
   934  07DD                     u160:
   935  07DD                     l818:
   936                           
   937                           ;lab10.c: 84:         PORTB = RCREG;
   938  07DD  081A               	movf	26,w	;volatile
   939  07DE  0086               	movwf	6	;volatile
   940  07DF                     l820:
   941                           
   942                           ;lab10.c: 86:      if (RCREG =='4'){
   943  07DF  3034               	movlw	52
   944  07E0  061A               	xorwf	26,w	;volatile
   945  07E1  1D03               	btfss	3,2
   946  07E2  2FE4               	goto	u171
   947  07E3  2FE5               	goto	u170
   948  07E4                     u171:
   949  07E4  2FFB               	goto	l77
   950  07E5                     u170:
   951  07E5                     l822:
   952                           
   953                           ;lab10.c: 87:          _delay((unsigned long)((250)*(8000000/4000.0)));
   954  07E5  3003               	movlw	3
   955  07E6  00FA               	movwf	??_texto+2
   956  07E7  308A               	movlw	138
   957  07E8  00F9               	movwf	??_texto+1
   958  07E9  3055               	movlw	85
   959  07EA  00F8               	movwf	??_texto
   960  07EB                     u247:
   961  07EB  0BF8               	decfsz	??_texto,f
   962  07EC  2FEB               	goto	u247
   963  07ED  0BF9               	decfsz	??_texto+1,f
   964  07EE  2FEB               	goto	u247
   965  07EF  0BFA               	decfsz	??_texto+2,f
   966  07F0  2FEB               	goto	u247
   967  07F1  2FF2               	nop2
   968  07F2                     l824:
   969                           
   970                           ;lab10.c: 88:          printf("\r Colocar wao en youtube \r");
   971  07F2  30A9               	movlw	low (STR_9| (0+32768))
   972  07F3  00F1               	movwf	printf@f
   973  07F4  3088               	movlw	high (STR_9| (0+32768))
   974  07F5  00F2               	movwf	printf@f+1
   975  07F6  120A  118A  26C4  120A  118A  	fcall	_printf
   976  07FB                     l77:	
   977                           ;lab10.c: 90:     }
   978                           
   979  07FB  0008               	return
   980  07FC                     __end_of_texto:
   981                           
   982                           	psect	text2
   983  06C4                     __ptext2:	
   984 ;; *************** function _printf *****************
   985 ;; Defined at:
   986 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  f               2    1[COMMON] PTR const unsigned char 
   989 ;;		 -> STR_9(27), STR_8(45), STR_7(45), STR_6(40), 
   990 ;;		 -> STR_5(13), STR_4(24), STR_3(24), STR_2(39), 
   991 ;;		 -> STR_1(23), 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  tmpval          4    0        struct .
   994 ;;  cp              2    0        PTR const unsigned char 
   995 ;;  len             2    0        unsigned int 
   996 ;;  val             2    0        unsigned int 
   997 ;;  c               1    7[COMMON] unsigned char 
   998 ;;  ap              1    6[COMMON] PTR void [1]
   999 ;;		 -> ?_printf(2), 
  1000 ;;  flag            1    0        unsigned char 
  1001 ;;  prec            1    0        char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2    1[COMMON] int 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         2       0       0       0       0
  1012 ;;      Locals:         2       0       0       0       0
  1013 ;;      Temps:          3       0       0       0       0
  1014 ;;      Totals:         7       0       0       0       0
  1015 ;;Total ram usage:        7 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    1
  1018 ;; This function calls:
  1019 ;;		_putch
  1020 ;; This function is called by:
  1021 ;;		_texto
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _printf
  1027  06C4                     _printf:
  1028  06C4                     l782:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1031                           
  1032                           
  1033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1034  06C4  3073               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1035  06C5  00F3               	movwf	??_printf
  1036  06C6  0873               	movf	??_printf,w
  1037  06C7  00F6               	movwf	printf@ap
  1038                           
  1039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1040  06C8  2ECF               	goto	l786
  1041  06C9                     l784:
  1042                           
  1043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1044  06C9  0877               	movf	printf@c,w
  1045  06CA  120A  118A  26AC  120A  118A  	fcall	_putch
  1046  06CF                     l786:	
  1047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1048                           
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1051  06CF  0872               	movf	printf@f+1,w
  1052  06D0  00F4               	movwf	??_printf+1
  1053  06D1  0871               	movf	printf@f,w
  1054  06D2  00F3               	movwf	??_printf
  1055  06D3  0AF1               	incf	printf@f,f
  1056  06D4  1903               	skipnz
  1057  06D5  0AF2               	incf	printf@f+1,f
  1058  06D6  0874               	movf	??_printf+1,w
  1059  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1060  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1061  06D9  00FF               	movwf	btemp+1
  1062  06DA  0873               	movf	??_printf,w
  1063  06DB  0084               	movwf	4
  1064  06DC  120A  118A  2003  120A  118A  	fcall	stringtab
  1065  06E1  00F5               	movwf	??_printf+2
  1066  06E2  0875               	movf	??_printf+2,w
  1067  06E3  00F7               	movwf	printf@c
  1068  06E4  0877               	movf	printf@c,w
  1069  06E5  1D03               	btfss	3,2
  1070  06E6  2EE8               	goto	u101
  1071  06E7  2EE9               	goto	u100
  1072  06E8                     u101:
  1073  06E8  2EC9               	goto	l784
  1074  06E9                     u100:
  1075  06E9                     l172:
  1076  06E9  0008               	return
  1077  06EA                     __end_of_printf:
  1078                           
  1079                           	psect	text3
  1080  06AC                     __ptext3:	
  1081 ;; *************** function _putch *****************
  1082 ;; Defined at:
  1083 ;;		line 50 in file "lab10.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  DATA            1    wreg     unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  DATA            1    0[COMMON] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         1       0       0       0       0
  1101 ;;Total ram usage:        1 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_printf
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _putch
  1112  06AC                     _putch:
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _putch: [wreg]
  1116                           ;putch@DATA stored from wreg
  1117  06AC  00F0               	movwf	putch@DATA
  1118  06AD                     l682:
  1119  06AD                     l57:	
  1120                           ;lab10.c: 51:     while (TXIF == 0);
  1121                           
  1122  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1123  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1124  06AF  1E0C               	btfss	12,4	;volatile
  1125  06B0  2EB2               	goto	u11
  1126  06B1  2EB3               	goto	u10
  1127  06B2                     u11:
  1128  06B2  2EAD               	goto	l57
  1129  06B3                     u10:
  1130  06B3                     l684:
  1131                           
  1132                           ;lab10.c: 52:     TXREG = DATA;
  1133  06B3  0870               	movf	putch@DATA,w
  1134  06B4  0099               	movwf	25	;volatile
  1135  06B5                     l60:
  1136  06B5  0008               	return
  1137  06B6                     __end_of_putch:
  1138                           
  1139                           	psect	text4
  1140  06EA                     __ptext4:	
  1141 ;; *************** function _confi *****************
  1142 ;; Defined at:
  1143 ;;		line 101 in file "lab10.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _confi
  1172  06EA                     _confi:
  1173  06EA                     l694:	
  1174                           ;incstack = 0
  1175                           ; Regs used in _confi: [wreg+status,2]
  1176                           
  1177                           
  1178                           ;lab10.c: 102:   ANSEL = 0b00000000;
  1179  06EA  1683               	bsf	3,5	;RP0=1, select bank3
  1180  06EB  1703               	bsf	3,6	;RP1=1, select bank3
  1181  06EC  0188               	clrf	8	;volatile
  1182                           
  1183                           ;lab10.c: 103:   ANSELH = 0X00;
  1184  06ED  0189               	clrf	9	;volatile
  1185                           
  1186                           ;lab10.c: 105:   TRISA = 0X00;
  1187  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  1188  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  1189  06F0  0185               	clrf	5	;volatile
  1190                           
  1191                           ;lab10.c: 106:   TRISB = 0X00;
  1192  06F1  0186               	clrf	6	;volatile
  1193                           
  1194                           ;lab10.c: 109:   PORTA = 0X00;
  1195  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1196  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1197  06F4  0185               	clrf	5	;volatile
  1198                           
  1199                           ;lab10.c: 110:   PORTB = 0X00;
  1200  06F5  0186               	clrf	6	;volatile
  1201  06F6                     l696:
  1202                           
  1203                           ;lab10.c: 113:   OSCCONbits.IRCF2 = 1;
  1204  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1205  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1206  06F8  170F               	bsf	15,6	;volatile
  1207  06F9                     l698:
  1208                           
  1209                           ;lab10.c: 114:   OSCCONbits.IRCF1 = 1;
  1210  06F9  168F               	bsf	15,5	;volatile
  1211  06FA                     l700:
  1212                           
  1213                           ;lab10.c: 115:   OSCCONbits.IRCF0 = 1;
  1214  06FA  160F               	bsf	15,4	;volatile
  1215  06FB                     l702:
  1216                           
  1217                           ;lab10.c: 116:   OSCCONbits.SCS = 1;
  1218  06FB  140F               	bsf	15,0	;volatile
  1219  06FC                     l704:
  1220                           
  1221                           ;lab10.c: 119:   PIR1bits.ADIF = 0;
  1222  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1223  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1224  06FE  130C               	bcf	12,6	;volatile
  1225  06FF                     l706:
  1226                           
  1227                           ;lab10.c: 120:   PIE1bits.ADIE = 1;
  1228  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0700  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0701  170C               	bsf	12,6	;volatile
  1231  0702                     l708:
  1232                           
  1233                           ;lab10.c: 121:   INTCONbits.PEIE = 1;
  1234  0702  170B               	bsf	11,6	;volatile
  1235  0703                     l710:
  1236                           
  1237                           ;lab10.c: 122:   INTCONbits.GIE = 1;
  1238  0703  178B               	bsf	11,7	;volatile
  1239  0704                     l712:
  1240                           
  1241                           ;lab10.c: 123:   PIE1bits.RCIE = 1;
  1242  0704  168C               	bsf	12,5	;volatile
  1243  0705                     l714:
  1244                           
  1245                           ;lab10.c: 124:   PIE1bits.TXIE = 1;
  1246  0705  160C               	bsf	12,4	;volatile
  1247  0706                     l716:
  1248                           
  1249                           ;lab10.c: 125:   PIR1bits.TXIF = 0;
  1250  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0708  120C               	bcf	12,4	;volatile
  1253  0709                     l718:
  1254                           
  1255                           ;lab10.c: 126:   PIR1bits.RCIF = 0;
  1256  0709  128C               	bcf	12,5	;volatile
  1257  070A                     l720:
  1258                           
  1259                           ;lab10.c: 130:   TXSTAbits.SYNC = 0;
  1260  070A  1683               	bsf	3,5	;RP0=1, select bank1
  1261  070B  1303               	bcf	3,6	;RP1=0, select bank1
  1262  070C  1218               	bcf	24,4	;volatile
  1263  070D                     l722:
  1264                           
  1265                           ;lab10.c: 131:   TXSTAbits.BRGH = 1;
  1266  070D  1518               	bsf	24,2	;volatile
  1267  070E                     l724:
  1268                           
  1269                           ;lab10.c: 133:   BAUDCTLbits.BRG16 = 1;
  1270  070E  1683               	bsf	3,5	;RP0=1, select bank3
  1271  070F  1703               	bsf	3,6	;RP1=1, select bank3
  1272  0710  1587               	bsf	7,3	;volatile
  1273  0711                     l726:
  1274                           
  1275                           ;lab10.c: 135:   SPBRG = 207;
  1276  0711  30CF               	movlw	207
  1277  0712  1683               	bsf	3,5	;RP0=1, select bank1
  1278  0713  1303               	bcf	3,6	;RP1=0, select bank1
  1279  0714  0099               	movwf	25	;volatile
  1280  0715                     l728:
  1281                           
  1282                           ;lab10.c: 136:   SPBRGH = 0;
  1283  0715  019A               	clrf	26	;volatile
  1284  0716                     l730:
  1285                           
  1286                           ;lab10.c: 138:   RCSTAbits.SPEN = 1;
  1287  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0718  1798               	bsf	24,7	;volatile
  1290  0719                     l732:
  1291                           
  1292                           ;lab10.c: 139:   RCSTAbits.RX9 = 0;
  1293  0719  1318               	bcf	24,6	;volatile
  1294  071A                     l734:
  1295                           
  1296                           ;lab10.c: 140:   RCSTAbits.CREN = 1;
  1297  071A  1618               	bsf	24,4	;volatile
  1298  071B                     l736:
  1299                           
  1300                           ;lab10.c: 142:   TXSTAbits.TXEN = 1;
  1301  071B  1683               	bsf	3,5	;RP0=1, select bank1
  1302  071C  1303               	bcf	3,6	;RP1=0, select bank1
  1303  071D  1698               	bsf	24,5	;volatile
  1304  071E                     l80:
  1305  071E  0008               	return
  1306  071F                     __end_of_confi:
  1307  007E                     btemp	set	126	;btemp
  1308  007E                     wtemp0	set	126
  1309                           
  1310                           	psect	config
  1311                           
  1312                           ;Config register CONFIG1 @ 0x2007
  1313                           ;	Oscillator Selection bits
  1314                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1315                           ;	Watchdog Timer Enable bit
  1316                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1317                           ;	Power-up Timer Enable bit
  1318                           ;	PWRTE = ON, PWRT enabled
  1319                           ;	RE3/MCLR pin function select bit
  1320                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1321                           ;	Code Protection bit
  1322                           ;	CP = OFF, Program memory code protection is disabled
  1323                           ;	Data Code Protection bit
  1324                           ;	CPD = OFF, Data memory code protection is disabled
  1325                           ;	Brown Out Reset Selection bits
  1326                           ;	BOREN = OFF, BOR disabled
  1327                           ;	Internal External Switchover bit
  1328                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1329                           ;	Fail-Safe Clock Monitor Enabled bit
  1330                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1331                           ;	Low Voltage Programming Enable bit
  1332                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1333                           ;	In-Circuit Debugger Mode bit
  1334                           ;	DEBUG = 0x1, unprogrammed default
  1335  2007                     	org	8199
  1336  2007  30C4               	dw	12484
  1337                           
  1338                           ;Config register CONFIG2 @ 0x2008
  1339                           ;	Brown-out Reset Selection bit
  1340                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1341                           ;	Flash Program Memory Self Write Enable bits
  1342                           ;	WRT = OFF, Write protection off
  1343  2008                     	org	8200
  1344  2008  3FFF               	dw	16383

Data Sizes:
    Strings     280
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_9(CODE[27]), STR_8(CODE[45]), STR_7(CODE[45]), STR_6(CODE[40]), 
		 -> STR_5(CODE[13]), STR_4(CODE[24]), STR_3(CODE[24]), STR_2(CODE[39]), 
		 -> STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_texto
    _texto->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     745
                              _confi
                              _texto
 ---------------------------------------------------------------------------------
 (1) _texto                                                3     3      0     745
                                              8 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     745
                                              1 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _confi                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confi
   _texto
     _printf
       _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 08 23:20:35 2021

                      pc 0002                       l60 06B5                       l63 078D  
                     l80 071E                       l72 07D7                       l57 06AD  
                     l68 07C0                       l77 07FB                       u10 06B3  
                     u11 06B2                       fsr 0004                      l172 06E9  
                    l700 06FA                      l710 0703                      l702 06FB  
                    l720 070A                      l712 0704                      l704 06FC  
                    l800 0777                      l730 0716                      l722 070D  
                    l714 0705                      l706 06FF                      l810 07B7  
                    l802 0793                      l732 0719                      l724 070E  
                    l716 0706                      l708 0702                      l820 07DF  
                    l812 07C6                      l804 0799                      l734 071A  
                    l726 0711                      l718 0709                      l822 07E5  
                    l814 07C8                      l806 07A6                      l736 071B  
                    l728 0715                      l824 07F2                      l816 07CE  
                    l808 07AF                      l682 06AD                      l818 07DD  
                    l826 06B6                      l684 06B3                      l828 06BB  
                    l694 06EA                      l782 06C4                      l790 072C  
                    l696 06F6                      l784 06C9                      l792 0735  
                    l698 06F9                      l786 06CF                      l794 074B  
                    l796 0758                      l788 071F                      l798 076E  
                    u100 06E9                      u101 06E8                      u110 0793  
                    u111 0792                      u120 0799                      u121 0798  
                    u130 07B7                      u131 07B6                      u140 07C6  
                    u141 07C5                      u150 07CE                      u151 07CD  
                    u207 0751                      u160 07DD                      u161 07DC  
                    u217 0767                      u170 07E5                      u171 07E4  
                    u227 077D                      u237 079F                      u247 07EB  
                    u187 0725                      u197 073B                      fsr0 0004  
                    indf 0000                     STR_1 08F4                     STR_2 0882  
                   STR_3 08C4                     STR_4 08DC                     STR_5 090B  
                   STR_6 085A                     STR_7 0800                     STR_8 082D  
                   STR_9 08A9                     _RCIF 0065                     _TXIF 0064  
                   _main 06B6                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
                  _confi 06EA                    _texto 071F                    _putch 06AC  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 06C4                   ??_main 007B  
                 ?_confi 0070                   ?_texto 0070                   ?_putch 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _printf 06C4  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_confi 071F  
          __end_of_texto 07FC            __end_of_putch 06B6                  ??_confi 0070  
                ??_texto 0078                  ??_putch 0070               __pmaintext 06B6  
                ?_printf 0071               __stringtab 0003                  __ptext1 071F  
                __ptext2 06C4                  __ptext3 06AC                  __ptext4 06EA  
        __size_of_printf 0026     end_of_initialization 07FC                _RCSTAbits 0018  
                printf@c 0077                  printf@f 0071             __pstringtext 0800  
              _TXSTAbits 0098              _BAUDCTLbits 0187           __end_of_printf 06EA  
    start_initialization 07FC                 ??_printf 0073                ___latbits 0002  
              __pstrings 0003           __size_of_confi 0035           __size_of_texto 00DD  
         __size_of_putch 000A                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 0015       __end_of__stringtab 0015            __size_of_main 000E  
              putch@DATA 0070               _INTCONbits 000B                stringcode 000D  
             _OSCCONbits 008F                 printf@ap 0076                 stringtab 0003  
