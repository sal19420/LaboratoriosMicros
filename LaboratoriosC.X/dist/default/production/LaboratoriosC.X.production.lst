

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Apr 17 20:58:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  01EA                     __pidataBANK0:
   216                           
   217                           ;initializer for _display
   218  01EA  343F               	retlw	63
   219  01EB  3406               	retlw	6
   220  01EC  345B               	retlw	91
   221  01ED  344F               	retlw	79
   222  01EE  3466               	retlw	102
   223  01EF  346D               	retlw	109
   224  01F0  347D               	retlw	125
   225  01F1  3407               	retlw	7
   226  01F2  347F               	retlw	127
   227  01F3  3467               	retlw	103
   228                           
   229                           	psect	nvCOMMON
   230  0075                     __pnvCOMMON:
   231  0075                     _cont:
   232  0075                     	ds	2
   233                           
   234                           	psect	nvBANK0
   235  0034                     __pnvBANK0:
   236  0034                     _res:
   237  0034                     	ds	2
   238  0036                     _CEN:
   239  0036                     	ds	2
   240  0038                     _DECE:
   241  0038                     	ds	2
   242  003A                     _UNI:
   243  003A                     	ds	2
   244  0007                     _PORTC	set	7
   245  000B                     _INTCONbits	set	11
   246  0001                     _TMR0	set	1
   247  0008                     _PORTD	set	8
   248  0006                     _PORTBbits	set	6
   249  0006                     _PORTB	set	6
   250  0031                     _RB1	set	49
   251  0030                     _RB0	set	48
   252  0058                     _RBIF	set	88
   253  005A                     _T0IF	set	90
   254  0096                     _IOCBbits	set	150
   255  0095                     _WPUBbits	set	149
   256  0081                     _OPTION_REGbits	set	129
   257  008F                     _OSCCONbits	set	143
   258  0088                     _TRISD	set	136
   259  0087                     _TRISC	set	135
   260  0086                     _TRISB	set	134
   261  0189                     _ANSELH	set	393
   262  0188                     _ANSEL	set	392
   263                           
   264                           	psect	cinit
   265  0011                     start_initialization:	
   266                           ; #config settings
   267                           
   268  0011                     __initialization:
   269                           
   270                           ; Initialize objects allocated to BANK0
   271  0011  1383               	bcf	3,7	;select IRP bank0
   272  0012  302A               	movlw	low (__pdataBANK0+10)
   273  0013  00FD               	movwf	btemp+-1
   274  0014  3001               	movlw	high __pidataBANK0
   275  0015  00FE               	movwf	btemp
   276  0016  30EA               	movlw	low __pidataBANK0
   277  0017  00FF               	movwf	btemp+1
   278  0018  3020               	movlw	low __pdataBANK0
   279  0019  0084               	movwf	4
   280  001A  120A  118A  21DB  120A  118A  	fcall	init_ram0
   281                           
   282                           ; Clear objects allocated to COMMON
   283  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   284  0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   285  0021                     end_of_initialization:	
   286                           ;End of C runtime variable initialization code
   287                           
   288  0021                     __end_of__initialization:
   289  0021  0183               	clrf	3
   290  0022  120A  118A  29C0   	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMMON
   293  0077                     __pbssCOMMON:
   294  0077                     _banderas:
   295  0077                     	ds	2
   296                           
   297                           	psect	dataBANK0
   298  0020                     __pdataBANK0:
   299  0020                     _display:
   300  0020                     	ds	10
   301                           
   302                           	psect	inittext
   303  01D7                     init_fetch0:	
   304                           ;	Called with low address in FSR and high address in W
   305                           
   306  01D7  087E               	movf	btemp,w
   307  01D8  008A               	movwf	10
   308  01D9  087F               	movf	btemp+1,w
   309  01DA  0082               	movwf	2
   310  01DB                     init_ram0:	
   311                           ;Called with:
   312                           ;	high address of idata address in btemp 
   313                           ;	low address of idata address in btemp+1 
   314                           ;	low address of data in FSR
   315                           ;	high address + 1 of data in btemp-1
   316                           
   317  01DB  120A  118A  21D7  120A  118A  	fcall	init_fetch0
   318  01E0  0080               	movwf	0
   319  01E1  0A84               	incf	4,f
   320  01E2  0804               	movf	4,w
   321  01E3  067D               	xorwf	btemp+-1,w
   322  01E4  1903               	btfsc	3,2
   323  01E5  3400               	retlw	0
   324  01E6  0AFF               	incf	btemp+1,f
   325  01E7  1903               	btfsc	3,2
   326  01E8  0AFE               	incf	btemp,f
   327  01E9  29DB               	goto	init_ram0
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_confi:
   332  0070                     ?_ISR:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_ISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_division:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 2 bytes @ 0x0
   346  0070                     	ds	4
   347  0074                     ??_confi:
   348  0074                     ??___awdiv:	
   349                           ; 1 bytes @ 0x4
   350                           
   351  0074                     ??___awmod:	
   352                           ; 1 bytes @ 0x4
   353                           
   354                           
   355                           ; 1 bytes @ 0x4
   356  0074                     	ds	1
   357  0075                     ??_division:
   358                           
   359                           	psect	cstackBANK0
   360  002A                     __pcstackBANK0:	
   361                           ; 1 bytes @ 0x5
   362                           
   363  002A                     ?___awdiv:
   364  002A                     ?___awmod:	
   365                           ; 2 bytes @ 0x0
   366                           
   367  002A                     ___awdiv@divisor:	
   368                           ; 2 bytes @ 0x0
   369                           
   370  002A                     ___awmod@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373                           
   374                           ; 2 bytes @ 0x0
   375  002A                     	ds	2
   376  002C                     ___awdiv@dividend:
   377  002C                     ___awmod@dividend:	
   378                           ; 2 bytes @ 0x2
   379                           
   380                           
   381                           ; 2 bytes @ 0x2
   382  002C                     	ds	2
   383  002E                     ___awdiv@counter:
   384  002E                     ___awmod@counter:	
   385                           ; 1 bytes @ 0x4
   386                           
   387                           
   388                           ; 1 bytes @ 0x4
   389  002E                     	ds	1
   390  002F                     ___awdiv@sign:
   391  002F                     ___awmod@sign:	
   392                           ; 1 bytes @ 0x5
   393                           
   394                           
   395                           ; 1 bytes @ 0x5
   396  002F                     	ds	1
   397  0030                     ___awdiv@quotient:
   398                           
   399                           ; 2 bytes @ 0x6
   400  0030                     	ds	2
   401  0032                     ??_main:
   402                           
   403                           ; 1 bytes @ 0x8
   404  0032                     	ds	2
   405                           
   406                           	psect	maintext
   407  01C0                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 96 in file "lab7_1.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       2       0       0       0
   430 ;;      Totals:         0       2       0       0       0
   431 ;;Total ram usage:        2 bytes
   432 ;; Hardware stack levels required when called:    3
   433 ;; This function calls:
   434 ;;		_confi
   435 ;;		_division
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _main
   443  01C0                     _main:
   444  01C0                     l1082:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   447                           
   448                           
   449                           ;lab7_1.c: 97:     confi();
   450  01C0  120A  118A  2197  120A  118A  	fcall	_confi
   451  01C5                     l75:	
   452                           ;lab7_1.c: 98:     while(1){
   453                           
   454                           
   455                           ;lab7_1.c: 99:         division();
   456  01C5  120A  118A  2148  120A  118A  	fcall	_division
   457  01CA                     l1084:
   458                           
   459                           ;lab7_1.c: 100:         cont = PORTC;
   460  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   461  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   462  01CC  0807               	movf	7,w	;volatile
   463  01CD  00B2               	movwf	??_main
   464  01CE  01B3               	clrf	??_main+1
   465  01CF  0832               	movf	??_main,w
   466  01D0  00F5               	movwf	_cont
   467  01D1  0833               	movf	??_main+1,w
   468  01D2  00F6               	movwf	_cont+1
   469  01D3  29C5               	goto	l75
   470  01D4  120A  118A  280E   	ljmp	start
   471  01D7                     __end_of_main:
   472                           
   473                           	psect	text1
   474  0148                     __ptext1:	
   475 ;; *************** function _division *****************
   476 ;; Defined at:
   477 ;;		line 148 in file "lab7_1.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  2   24[None  ] int 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    2
   498 ;; This function calls:
   499 ;;		___awdiv
   500 ;;		___awmod
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _division
   508  0148                     _division:
   509  0148                     l1080:	
   510                           ;incstack = 0
   511                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;lab7_1.c: 149:     CEN = cont/100;
   515  0148  3064               	movlw	100
   516  0149  1283               	bcf	3,5	;RP0=0, select bank0
   517  014A  1303               	bcf	3,6	;RP1=0, select bank0
   518  014B  00AA               	movwf	___awdiv@divisor
   519  014C  3000               	movlw	0
   520  014D  00AB               	movwf	___awdiv@divisor+1
   521  014E  0876               	movf	_cont+1,w
   522  014F  00AD               	movwf	___awdiv@dividend+1
   523  0150  0875               	movf	_cont,w
   524  0151  00AC               	movwf	___awdiv@dividend
   525  0152  120A  118A  2025  120A  118A  	fcall	___awdiv
   526  0157  1283               	bcf	3,5	;RP0=0, select bank0
   527  0158  1303               	bcf	3,6	;RP1=0, select bank0
   528  0159  082B               	movf	?___awdiv+1,w
   529  015A  00B7               	movwf	_CEN+1
   530  015B  082A               	movf	?___awdiv,w
   531  015C  00B6               	movwf	_CEN
   532                           
   533                           ;lab7_1.c: 151:     res = cont%100;
   534  015D  3064               	movlw	100
   535  015E  00AA               	movwf	___awmod@divisor
   536  015F  3000               	movlw	0
   537  0160  00AB               	movwf	___awmod@divisor+1
   538  0161  0876               	movf	_cont+1,w
   539  0162  00AD               	movwf	___awmod@dividend+1
   540  0163  0875               	movf	_cont,w
   541  0164  00AC               	movwf	___awmod@dividend
   542  0165  120A  118A  20ED  120A  118A  	fcall	___awmod
   543  016A  1283               	bcf	3,5	;RP0=0, select bank0
   544  016B  1303               	bcf	3,6	;RP1=0, select bank0
   545  016C  082B               	movf	?___awmod+1,w
   546  016D  00B5               	movwf	_res+1
   547  016E  082A               	movf	?___awmod,w
   548  016F  00B4               	movwf	_res
   549                           
   550                           ;lab7_1.c: 153:     DECE = res/10;
   551  0170  300A               	movlw	10
   552  0171  00AA               	movwf	___awdiv@divisor
   553  0172  3000               	movlw	0
   554  0173  00AB               	movwf	___awdiv@divisor+1
   555  0174  0835               	movf	_res+1,w
   556  0175  00AD               	movwf	___awdiv@dividend+1
   557  0176  0834               	movf	_res,w
   558  0177  00AC               	movwf	___awdiv@dividend
   559  0178  120A  118A  2025  120A  118A  	fcall	___awdiv
   560  017D  1283               	bcf	3,5	;RP0=0, select bank0
   561  017E  1303               	bcf	3,6	;RP1=0, select bank0
   562  017F  082B               	movf	?___awdiv+1,w
   563  0180  00B9               	movwf	_DECE+1
   564  0181  082A               	movf	?___awdiv,w
   565  0182  00B8               	movwf	_DECE
   566                           
   567                           ;lab7_1.c: 155:     UNI = res%10;
   568  0183  300A               	movlw	10
   569  0184  00AA               	movwf	___awmod@divisor
   570  0185  3000               	movlw	0
   571  0186  00AB               	movwf	___awmod@divisor+1
   572  0187  0835               	movf	_res+1,w
   573  0188  00AD               	movwf	___awmod@dividend+1
   574  0189  0834               	movf	_res,w
   575  018A  00AC               	movwf	___awmod@dividend
   576  018B  120A  118A  20ED  120A  118A  	fcall	___awmod
   577  0190  1283               	bcf	3,5	;RP0=0, select bank0
   578  0191  1303               	bcf	3,6	;RP1=0, select bank0
   579  0192  082B               	movf	?___awmod+1,w
   580  0193  00BB               	movwf	_UNI+1
   581  0194  082A               	movf	?___awmod,w
   582  0195  00BA               	movwf	_UNI
   583  0196                     l84:
   584  0196  0008               	return
   585  0197                     __end_of_division:
   586                           
   587                           	psect	text2
   588  00ED                     __ptext2:	
   589 ;; *************** function ___awmod *****************
   590 ;; Defined at:
   591 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  divisor         2    0[BANK0 ] int 
   594 ;;  dividend        2    2[BANK0 ] int 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  sign            1    5[BANK0 ] unsigned char 
   597 ;;  counter         1    4[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2    0[BANK0 ] int 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       4       0       0       0
   608 ;;      Locals:         0       2       0       0       0
   609 ;;      Temps:          1       0       0       0       0
   610 ;;      Totals:         1       6       0       0       0
   611 ;;Total ram usage:        7 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_division
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function ___awmod
   623  00ED                     ___awmod:
   624  00ED                     l1042:	
   625                           ;incstack = 0
   626                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   627                           
   628  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   629  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   630  00EF  01AF               	clrf	___awmod@sign
   631  00F0                     l1044:
   632  00F0  1FAD               	btfss	___awmod@dividend+1,7
   633  00F1  28F3               	goto	u631
   634  00F2  28F4               	goto	u630
   635  00F3                     u631:
   636  00F3  28FB               	goto	l1050
   637  00F4                     u630:
   638  00F4                     l1046:
   639  00F4  09AC               	comf	___awmod@dividend,f
   640  00F5  09AD               	comf	___awmod@dividend+1,f
   641  00F6  0AAC               	incf	___awmod@dividend,f
   642  00F7  1903               	skipnz
   643  00F8  0AAD               	incf	___awmod@dividend+1,f
   644  00F9                     l1048:
   645  00F9  01AF               	clrf	___awmod@sign
   646  00FA  0AAF               	incf	___awmod@sign,f
   647  00FB                     l1050:
   648  00FB  1FAB               	btfss	___awmod@divisor+1,7
   649  00FC  28FE               	goto	u641
   650  00FD  28FF               	goto	u640
   651  00FE                     u641:
   652  00FE  2904               	goto	l1054
   653  00FF                     u640:
   654  00FF                     l1052:
   655  00FF  09AA               	comf	___awmod@divisor,f
   656  0100  09AB               	comf	___awmod@divisor+1,f
   657  0101  0AAA               	incf	___awmod@divisor,f
   658  0102  1903               	skipnz
   659  0103  0AAB               	incf	___awmod@divisor+1,f
   660  0104                     l1054:
   661  0104  082A               	movf	___awmod@divisor,w
   662  0105  042B               	iorwf	___awmod@divisor+1,w
   663  0106  1903               	btfsc	3,2
   664  0107  2909               	goto	u651
   665  0108  290A               	goto	u650
   666  0109                     u651:
   667  0109  2939               	goto	l1072
   668  010A                     u650:
   669  010A                     l1056:
   670  010A  01AE               	clrf	___awmod@counter
   671  010B  0AAE               	incf	___awmod@counter,f
   672  010C  2918               	goto	l1062
   673  010D                     l1058:
   674  010D  3001               	movlw	1
   675  010E                     u665:
   676  010E  1003               	clrc
   677  010F  0DAA               	rlf	___awmod@divisor,f
   678  0110  0DAB               	rlf	___awmod@divisor+1,f
   679  0111  3EFF               	addlw	-1
   680  0112  1D03               	skipz
   681  0113  290E               	goto	u665
   682  0114                     l1060:
   683  0114  3001               	movlw	1
   684  0115  00F4               	movwf	??___awmod
   685  0116  0874               	movf	??___awmod,w
   686  0117  07AE               	addwf	___awmod@counter,f
   687  0118                     l1062:
   688  0118  1FAB               	btfss	___awmod@divisor+1,7
   689  0119  291B               	goto	u671
   690  011A  291C               	goto	u670
   691  011B                     u671:
   692  011B  290D               	goto	l1058
   693  011C                     u670:
   694  011C                     l1064:
   695  011C  082B               	movf	___awmod@divisor+1,w
   696  011D  022D               	subwf	___awmod@dividend+1,w
   697  011E  1D03               	skipz
   698  011F  2922               	goto	u685
   699  0120  082A               	movf	___awmod@divisor,w
   700  0121  022C               	subwf	___awmod@dividend,w
   701  0122                     u685:
   702  0122  1C03               	skipc
   703  0123  2925               	goto	u681
   704  0124  2926               	goto	u680
   705  0125                     u681:
   706  0125  292C               	goto	l1068
   707  0126                     u680:
   708  0126                     l1066:
   709  0126  082A               	movf	___awmod@divisor,w
   710  0127  02AC               	subwf	___awmod@dividend,f
   711  0128  082B               	movf	___awmod@divisor+1,w
   712  0129  1C03               	skipc
   713  012A  03AD               	decf	___awmod@dividend+1,f
   714  012B  02AD               	subwf	___awmod@dividend+1,f
   715  012C                     l1068:
   716  012C  3001               	movlw	1
   717  012D                     u695:
   718  012D  1003               	clrc
   719  012E  0CAB               	rrf	___awmod@divisor+1,f
   720  012F  0CAA               	rrf	___awmod@divisor,f
   721  0130  3EFF               	addlw	-1
   722  0131  1D03               	skipz
   723  0132  292D               	goto	u695
   724  0133                     l1070:
   725  0133  3001               	movlw	1
   726  0134  02AE               	subwf	___awmod@counter,f
   727  0135  1D03               	btfss	3,2
   728  0136  2938               	goto	u701
   729  0137  2939               	goto	u700
   730  0138                     u701:
   731  0138  291C               	goto	l1064
   732  0139                     u700:
   733  0139                     l1072:
   734  0139  082F               	movf	___awmod@sign,w
   735  013A  1903               	btfsc	3,2
   736  013B  293D               	goto	u711
   737  013C  293E               	goto	u710
   738  013D                     u711:
   739  013D  2943               	goto	l1076
   740  013E                     u710:
   741  013E                     l1074:
   742  013E  09AC               	comf	___awmod@dividend,f
   743  013F  09AD               	comf	___awmod@dividend+1,f
   744  0140  0AAC               	incf	___awmod@dividend,f
   745  0141  1903               	skipnz
   746  0142  0AAD               	incf	___awmod@dividend+1,f
   747  0143                     l1076:
   748  0143  082D               	movf	___awmod@dividend+1,w
   749  0144  00AB               	movwf	?___awmod+1
   750  0145  082C               	movf	___awmod@dividend,w
   751  0146  00AA               	movwf	?___awmod
   752  0147                     l336:
   753  0147  0008               	return
   754  0148                     __end_of___awmod:
   755                           
   756                           	psect	text3
   757  0025                     __ptext3:	
   758 ;; *************** function ___awdiv *****************
   759 ;; Defined at:
   760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  divisor         2    0[BANK0 ] int 
   763 ;;  dividend        2    2[BANK0 ] int 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  quotient        2    6[BANK0 ] int 
   766 ;;  sign            1    5[BANK0 ] unsigned char 
   767 ;;  counter         1    4[BANK0 ] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2    0[BANK0 ] int 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       4       0       0       0
   778 ;;      Locals:         0       4       0       0       0
   779 ;;      Temps:          1       0       0       0       0
   780 ;;      Totals:         1       8       0       0       0
   781 ;;Total ram usage:        9 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    1
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_division
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function ___awdiv
   793  0025                     ___awdiv:
   794  0025                     l998:	
   795                           ;incstack = 0
   796                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   797                           
   798  0025  1283               	bcf	3,5	;RP0=0, select bank0
   799  0026  1303               	bcf	3,6	;RP1=0, select bank0
   800  0027  01AF               	clrf	___awdiv@sign
   801  0028                     l1000:
   802  0028  1FAB               	btfss	___awdiv@divisor+1,7
   803  0029  282B               	goto	u531
   804  002A  282C               	goto	u530
   805  002B                     u531:
   806  002B  2833               	goto	l1006
   807  002C                     u530:
   808  002C                     l1002:
   809  002C  09AA               	comf	___awdiv@divisor,f
   810  002D  09AB               	comf	___awdiv@divisor+1,f
   811  002E  0AAA               	incf	___awdiv@divisor,f
   812  002F  1903               	skipnz
   813  0030  0AAB               	incf	___awdiv@divisor+1,f
   814  0031                     l1004:
   815  0031  01AF               	clrf	___awdiv@sign
   816  0032  0AAF               	incf	___awdiv@sign,f
   817  0033                     l1006:
   818  0033  1FAD               	btfss	___awdiv@dividend+1,7
   819  0034  2836               	goto	u541
   820  0035  2837               	goto	u540
   821  0036                     u541:
   822  0036  2840               	goto	l1012
   823  0037                     u540:
   824  0037                     l1008:
   825  0037  09AC               	comf	___awdiv@dividend,f
   826  0038  09AD               	comf	___awdiv@dividend+1,f
   827  0039  0AAC               	incf	___awdiv@dividend,f
   828  003A  1903               	skipnz
   829  003B  0AAD               	incf	___awdiv@dividend+1,f
   830  003C                     l1010:
   831  003C  3001               	movlw	1
   832  003D  00F4               	movwf	??___awdiv
   833  003E  0874               	movf	??___awdiv,w
   834  003F  06AF               	xorwf	___awdiv@sign,f
   835  0040                     l1012:
   836  0040  01B0               	clrf	___awdiv@quotient
   837  0041  01B1               	clrf	___awdiv@quotient+1
   838  0042                     l1014:
   839  0042  082A               	movf	___awdiv@divisor,w
   840  0043  042B               	iorwf	___awdiv@divisor+1,w
   841  0044  1903               	btfsc	3,2
   842  0045  2847               	goto	u551
   843  0046  2848               	goto	u550
   844  0047                     u551:
   845  0047  287F               	goto	l1034
   846  0048                     u550:
   847  0048                     l1016:
   848  0048  01AE               	clrf	___awdiv@counter
   849  0049  0AAE               	incf	___awdiv@counter,f
   850  004A  2856               	goto	l1022
   851  004B                     l1018:
   852  004B  3001               	movlw	1
   853  004C                     u565:
   854  004C  1003               	clrc
   855  004D  0DAA               	rlf	___awdiv@divisor,f
   856  004E  0DAB               	rlf	___awdiv@divisor+1,f
   857  004F  3EFF               	addlw	-1
   858  0050  1D03               	skipz
   859  0051  284C               	goto	u565
   860  0052                     l1020:
   861  0052  3001               	movlw	1
   862  0053  00F4               	movwf	??___awdiv
   863  0054  0874               	movf	??___awdiv,w
   864  0055  07AE               	addwf	___awdiv@counter,f
   865  0056                     l1022:
   866  0056  1FAB               	btfss	___awdiv@divisor+1,7
   867  0057  2859               	goto	u571
   868  0058  285A               	goto	u570
   869  0059                     u571:
   870  0059  284B               	goto	l1018
   871  005A                     u570:
   872  005A                     l1024:
   873  005A  3001               	movlw	1
   874  005B                     u585:
   875  005B  1003               	clrc
   876  005C  0DB0               	rlf	___awdiv@quotient,f
   877  005D  0DB1               	rlf	___awdiv@quotient+1,f
   878  005E  3EFF               	addlw	-1
   879  005F  1D03               	skipz
   880  0060  285B               	goto	u585
   881  0061  082B               	movf	___awdiv@divisor+1,w
   882  0062  022D               	subwf	___awdiv@dividend+1,w
   883  0063  1D03               	skipz
   884  0064  2867               	goto	u595
   885  0065  082A               	movf	___awdiv@divisor,w
   886  0066  022C               	subwf	___awdiv@dividend,w
   887  0067                     u595:
   888  0067  1C03               	skipc
   889  0068  286A               	goto	u591
   890  0069  286B               	goto	u590
   891  006A                     u591:
   892  006A  2872               	goto	l1030
   893  006B                     u590:
   894  006B                     l1026:
   895  006B  082A               	movf	___awdiv@divisor,w
   896  006C  02AC               	subwf	___awdiv@dividend,f
   897  006D  082B               	movf	___awdiv@divisor+1,w
   898  006E  1C03               	skipc
   899  006F  03AD               	decf	___awdiv@dividend+1,f
   900  0070  02AD               	subwf	___awdiv@dividend+1,f
   901  0071                     l1028:
   902  0071  1430               	bsf	___awdiv@quotient,0
   903  0072                     l1030:
   904  0072  3001               	movlw	1
   905  0073                     u605:
   906  0073  1003               	clrc
   907  0074  0CAB               	rrf	___awdiv@divisor+1,f
   908  0075  0CAA               	rrf	___awdiv@divisor,f
   909  0076  3EFF               	addlw	-1
   910  0077  1D03               	skipz
   911  0078  2873               	goto	u605
   912  0079                     l1032:
   913  0079  3001               	movlw	1
   914  007A  02AE               	subwf	___awdiv@counter,f
   915  007B  1D03               	btfss	3,2
   916  007C  287E               	goto	u611
   917  007D  287F               	goto	u610
   918  007E                     u611:
   919  007E  285A               	goto	l1024
   920  007F                     u610:
   921  007F                     l1034:
   922  007F  082F               	movf	___awdiv@sign,w
   923  0080  1903               	btfsc	3,2
   924  0081  2883               	goto	u621
   925  0082  2884               	goto	u620
   926  0083                     u621:
   927  0083  2889               	goto	l1038
   928  0084                     u620:
   929  0084                     l1036:
   930  0084  09B0               	comf	___awdiv@quotient,f
   931  0085  09B1               	comf	___awdiv@quotient+1,f
   932  0086  0AB0               	incf	___awdiv@quotient,f
   933  0087  1903               	skipnz
   934  0088  0AB1               	incf	___awdiv@quotient+1,f
   935  0089                     l1038:
   936  0089  0831               	movf	___awdiv@quotient+1,w
   937  008A  00AB               	movwf	?___awdiv+1
   938  008B  0830               	movf	___awdiv@quotient,w
   939  008C  00AA               	movwf	?___awdiv
   940  008D                     l323:
   941  008D  0008               	return
   942  008E                     __end_of___awdiv:
   943                           
   944                           	psect	text4
   945  0197                     __ptext4:	
   946 ;; *************** function _confi *****************
   947 ;; Defined at:
   948 ;;		line 104 in file "lab7_1.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0
   965 ;;      Totals:         0       0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _confi
   978  0197                     _confi:
   979  0197                     l758:	
   980                           ;incstack = 0
   981                           ; Regs used in _confi: [wreg+status,2]
   982                           
   983                           
   984                           ;lab7_1.c: 105:   ANSEL = 0X00;
   985  0197  1683               	bsf	3,5	;RP0=1, select bank3
   986  0198  1703               	bsf	3,6	;RP1=1, select bank3
   987  0199  0188               	clrf	8	;volatile
   988                           
   989                           ;lab7_1.c: 106:   ANSELH = 0X00;
   990  019A  0189               	clrf	9	;volatile
   991  019B                     l760:
   992                           
   993                           ;lab7_1.c: 108:   TRISB = 0X03;
   994  019B  3003               	movlw	3
   995  019C  1683               	bsf	3,5	;RP0=1, select bank1
   996  019D  1303               	bcf	3,6	;RP1=0, select bank1
   997  019E  0086               	movwf	6	;volatile
   998  019F                     l762:
   999                           
  1000                           ;lab7_1.c: 109:   TRISC = 0X00;
  1001  019F  0187               	clrf	7	;volatile
  1002  01A0                     l764:
  1003                           
  1004                           ;lab7_1.c: 110:   TRISD = 0X00;
  1005  01A0  0188               	clrf	8	;volatile
  1006  01A1                     l766:
  1007                           
  1008                           ;lab7_1.c: 112:   PORTB = 0X00;
  1009  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1010  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1011  01A3  0186               	clrf	6	;volatile
  1012  01A4                     l768:
  1013                           
  1014                           ;lab7_1.c: 113:   PORTC = 0X00;
  1015  01A4  0187               	clrf	7	;volatile
  1016  01A5                     l770:
  1017                           
  1018                           ;lab7_1.c: 114:   PORTD = 0X00;
  1019  01A5  0188               	clrf	8	;volatile
  1020  01A6                     l772:
  1021                           
  1022                           ;lab7_1.c: 117:   OSCCONbits.IRCF2 = 1;
  1023  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1024  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1025  01A8  170F               	bsf	15,6	;volatile
  1026  01A9                     l774:
  1027                           
  1028                           ;lab7_1.c: 118:   OSCCONbits.IRCF1 = 1;
  1029  01A9  168F               	bsf	15,5	;volatile
  1030  01AA                     l776:
  1031                           
  1032                           ;lab7_1.c: 119:   OSCCONbits.IRCF0 = 1;
  1033  01AA  160F               	bsf	15,4	;volatile
  1034  01AB                     l778:
  1035                           
  1036                           ;lab7_1.c: 120:   OSCCONbits.SCS = 1;
  1037  01AB  140F               	bsf	15,0	;volatile
  1038  01AC                     l780:
  1039                           
  1040                           ;lab7_1.c: 123:   INTCONbits.GIE = 1;
  1041  01AC  178B               	bsf	11,7	;volatile
  1042  01AD                     l782:
  1043                           
  1044                           ;lab7_1.c: 124:   INTCONbits.T0IE = 1;
  1045  01AD  168B               	bsf	11,5	;volatile
  1046  01AE                     l784:
  1047                           
  1048                           ;lab7_1.c: 125:   INTCONbits.T0IF = 0;
  1049  01AE  110B               	bcf	11,2	;volatile
  1050  01AF                     l786:
  1051                           
  1052                           ;lab7_1.c: 127:   OPTION_REGbits.PSA = 0;
  1053  01AF  1181               	bcf	1,3	;volatile
  1054  01B0                     l788:
  1055                           
  1056                           ;lab7_1.c: 128:   OPTION_REGbits.T0CS = 0;
  1057  01B0  1281               	bcf	1,5	;volatile
  1058  01B1                     l790:
  1059                           
  1060                           ;lab7_1.c: 129:   OPTION_REGbits.PS2 = 1;
  1061  01B1  1501               	bsf	1,2	;volatile
  1062  01B2                     l792:
  1063                           
  1064                           ;lab7_1.c: 130:   OPTION_REGbits.PS1 = 1;
  1065  01B2  1481               	bsf	1,1	;volatile
  1066  01B3                     l794:
  1067                           
  1068                           ;lab7_1.c: 131:   OPTION_REGbits.PS0 = 1;
  1069  01B3  1401               	bsf	1,0	;volatile
  1070  01B4                     l796:
  1071                           
  1072                           ;lab7_1.c: 133:   OPTION_REGbits.nRBPU = 0;
  1073  01B4  1381               	bcf	1,7	;volatile
  1074  01B5                     l798:
  1075                           
  1076                           ;lab7_1.c: 134:   WPUBbits.WPUB0 = 1;
  1077  01B5  1415               	bsf	21,0	;volatile
  1078  01B6                     l800:
  1079                           
  1080                           ;lab7_1.c: 135:   WPUBbits.WPUB1 = 1;
  1081  01B6  1495               	bsf	21,1	;volatile
  1082  01B7                     l802:
  1083                           
  1084                           ;lab7_1.c: 136:   IOCBbits.IOCB0 = 1;
  1085  01B7  1416               	bsf	22,0	;volatile
  1086  01B8                     l804:
  1087                           
  1088                           ;lab7_1.c: 137:   IOCBbits.IOCB1 = 1;
  1089  01B8  1496               	bsf	22,1	;volatile
  1090  01B9                     l806:
  1091                           
  1092                           ;lab7_1.c: 139:   banderas = 0b00000000;
  1093  01B9  01F7               	clrf	_banderas
  1094  01BA  01F8               	clrf	_banderas+1
  1095  01BB                     l808:
  1096                           
  1097                           ;lab7_1.c: 143:   TMR0 = 217;
  1098  01BB  30D9               	movlw	217
  1099  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1100  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1101  01BE  0081               	movwf	1	;volatile
  1102  01BF                     l81:
  1103  01BF  0008               	return
  1104  01C0                     __end_of_confi:
  1105                           
  1106                           	psect	text5
  1107  008E                     __ptext5:	
  1108 ;; *************** function _ISR *****************
  1109 ;; Defined at:
  1110 ;;		line 53 in file "lab7_1.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0
  1126 ;;      Temps:          4       0       0       0       0
  1127 ;;      Totals:         4       0       0       0       0
  1128 ;;Total ram usage:        4 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		Interrupt level 1
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _ISR
  1139  008E                     _ISR:
  1140  008E                     i1l948:
  1141                           
  1142                           ;lab7_1.c: 54:     if(T0IF == 1){
  1143  008E  1D0B               	btfss	11,2	;volatile
  1144  008F  2891               	goto	u46_21
  1145  0090  2892               	goto	u46_20
  1146  0091                     u46_21:
  1147  0091  28CF               	goto	i1l980
  1148  0092                     u46_20:
  1149  0092                     i1l950:
  1150                           
  1151                           ;lab7_1.c: 55:      PORTB = 0X00;
  1152  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0094  0186               	clrf	6	;volatile
  1155  0095                     i1l952:
  1156                           
  1157                           ;lab7_1.c: 57:        if (banderas == 0b00000000){
  1158  0095  0877               	movf	_banderas,w
  1159  0096  0478               	iorwf	_banderas+1,w
  1160  0097  1D03               	btfss	3,2
  1161  0098  289A               	goto	u47_21
  1162  0099  289B               	goto	u47_20
  1163  009A                     u47_21:
  1164  009A  28A8               	goto	i1l960
  1165  009B                     u47_20:
  1166  009B                     i1l954:
  1167                           
  1168                           ;lab7_1.c: 58:          PORTBbits.RB4 = 0;
  1169  009B  1206               	bcf	6,4	;volatile
  1170                           
  1171                           ;lab7_1.c: 59:          PORTBbits.RB2 = 1;
  1172  009C  1506               	bsf	6,2	;volatile
  1173  009D                     i1l956:
  1174                           
  1175                           ;lab7_1.c: 60:          PORTD = (display[UNI]);
  1176  009D  083A               	movf	_UNI,w
  1177  009E  3E20               	addlw	(low (_display| 0))& (0+255)
  1178  009F  0084               	movwf	4
  1179  00A0  1383               	bcf	3,7	;select IRP bank0
  1180  00A1  0800               	movf	0,w
  1181  00A2  0088               	movwf	8	;volatile
  1182  00A3                     i1l958:
  1183                           
  1184                           ;lab7_1.c: 61:          banderas = 0b00000001;
  1185  00A3  3001               	movlw	1
  1186  00A4  00F7               	movwf	_banderas
  1187  00A5  3000               	movlw	0
  1188  00A6  00F8               	movwf	_banderas+1
  1189                           
  1190                           ;lab7_1.c: 62:         }
  1191  00A7  28CC               	goto	i1l976
  1192  00A8                     i1l960:
  1193  00A8  0377               	decf	_banderas,w
  1194  00A9  0478               	iorwf	_banderas+1,w
  1195  00AA  1D03               	btfss	3,2
  1196  00AB  28AD               	goto	u48_21
  1197  00AC  28AE               	goto	u48_20
  1198  00AD                     u48_21:
  1199  00AD  28BB               	goto	i1l968
  1200  00AE                     u48_20:
  1201  00AE                     i1l962:
  1202                           
  1203                           ;lab7_1.c: 64:          PORTBbits.RB2 = 0;
  1204  00AE  1106               	bcf	6,2	;volatile
  1205                           
  1206                           ;lab7_1.c: 65:          PORTBbits.RB3 = 1;
  1207  00AF  1586               	bsf	6,3	;volatile
  1208  00B0                     i1l964:
  1209                           
  1210                           ;lab7_1.c: 66:          PORTD = (display[DECE]);
  1211  00B0  0838               	movf	_DECE,w
  1212  00B1  3E20               	addlw	(low (_display| 0))& (0+255)
  1213  00B2  0084               	movwf	4
  1214  00B3  1383               	bcf	3,7	;select IRP bank0
  1215  00B4  0800               	movf	0,w
  1216  00B5  0088               	movwf	8	;volatile
  1217  00B6                     i1l966:
  1218                           
  1219                           ;lab7_1.c: 67:          banderas = 0b00000010;
  1220  00B6  3002               	movlw	2
  1221  00B7  00F7               	movwf	_banderas
  1222  00B8  3000               	movlw	0
  1223  00B9  00F8               	movwf	_banderas+1
  1224                           
  1225                           ;lab7_1.c: 68:         }
  1226  00BA  28CC               	goto	i1l976
  1227  00BB                     i1l968:
  1228  00BB  3002               	movlw	2
  1229  00BC  0677               	xorwf	_banderas,w
  1230  00BD  0478               	iorwf	_banderas+1,w
  1231  00BE  1D03               	btfss	3,2
  1232  00BF  28C1               	goto	u49_21
  1233  00C0  28C2               	goto	u49_20
  1234  00C1                     u49_21:
  1235  00C1  28CC               	goto	i1l976
  1236  00C2                     u49_20:
  1237  00C2                     i1l970:
  1238                           
  1239                           ;lab7_1.c: 70:          PORTBbits.RB4 = 1;
  1240  00C2  1606               	bsf	6,4	;volatile
  1241                           
  1242                           ;lab7_1.c: 71:          PORTBbits.RB3 = 0;
  1243  00C3  1186               	bcf	6,3	;volatile
  1244  00C4                     i1l972:
  1245                           
  1246                           ;lab7_1.c: 72:          PORTD = (display[CEN]);
  1247  00C4  0836               	movf	_CEN,w
  1248  00C5  3E20               	addlw	(low (_display| 0))& (0+255)
  1249  00C6  0084               	movwf	4
  1250  00C7  1383               	bcf	3,7	;select IRP bank0
  1251  00C8  0800               	movf	0,w
  1252  00C9  0088               	movwf	8	;volatile
  1253  00CA                     i1l974:
  1254                           
  1255                           ;lab7_1.c: 73:          banderas = 0b00000000;
  1256  00CA  01F7               	clrf	_banderas
  1257  00CB  01F8               	clrf	_banderas+1
  1258  00CC                     i1l976:
  1259                           
  1260                           ;lab7_1.c: 75:      TMR0 = 217;
  1261  00CC  30D9               	movlw	217
  1262  00CD  0081               	movwf	1	;volatile
  1263  00CE                     i1l978:
  1264                           
  1265                           ;lab7_1.c: 76:      INTCONbits.T0IF = 0;
  1266  00CE  110B               	bcf	11,2	;volatile
  1267  00CF                     i1l980:
  1268                           
  1269                           ;lab7_1.c: 80:      if (RBIF == 1){
  1270  00CF  1C0B               	btfss	11,0	;volatile
  1271  00D0  28D2               	goto	u50_21
  1272  00D1  28D3               	goto	u50_20
  1273  00D2                     u50_21:
  1274  00D2  28E4               	goto	i1l70
  1275  00D3                     u50_20:
  1276  00D3                     i1l982:
  1277                           
  1278                           ;lab7_1.c: 81:         if (RB0 == 0){
  1279  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1280  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1281  00D5  1806               	btfsc	6,0	;volatile
  1282  00D6  28D8               	goto	u51_21
  1283  00D7  28D9               	goto	u51_20
  1284  00D8                     u51_21:
  1285  00D8  28DD               	goto	i1l986
  1286  00D9                     u51_20:
  1287  00D9                     i1l984:
  1288                           
  1289                           ;lab7_1.c: 82:             PORTC++;
  1290  00D9  3001               	movlw	1
  1291  00DA  00F0               	movwf	??_ISR
  1292  00DB  0870               	movf	??_ISR,w
  1293  00DC  0787               	addwf	7,f	;volatile
  1294  00DD                     i1l986:
  1295                           
  1296                           ;lab7_1.c: 84:         if (RB1 == 0){
  1297  00DD  1886               	btfsc	6,1	;volatile
  1298  00DE  28E0               	goto	u52_21
  1299  00DF  28E1               	goto	u52_20
  1300  00E0                     u52_21:
  1301  00E0  28E3               	goto	i1l990
  1302  00E1                     u52_20:
  1303  00E1                     i1l988:
  1304                           
  1305                           ;lab7_1.c: 85:             PORTC-- ;
  1306  00E1  3001               	movlw	1
  1307  00E2  0287               	subwf	7,f	;volatile
  1308  00E3                     i1l990:
  1309                           
  1310                           ;lab7_1.c: 87:         INTCONbits.RBIF = 0;
  1311  00E3  100B               	bcf	11,0	;volatile
  1312  00E4                     i1l70:
  1313  00E4  0873               	movf	??_ISR+3,w
  1314  00E5  008A               	movwf	10
  1315  00E6  0872               	movf	??_ISR+2,w
  1316  00E7  0084               	movwf	4
  1317  00E8  0E71               	swapf	??_ISR+1,w
  1318  00E9  0083               	movwf	3
  1319  00EA  0EFE               	swapf	btemp,f
  1320  00EB  0E7E               	swapf	btemp,w
  1321  00EC  0009               	retfie
  1322  00ED                     __end_of_ISR:
  1323  007E                     btemp	set	126	;btemp
  1324  007E                     wtemp0	set	126
  1325                           
  1326                           	psect	intentry
  1327  0004                     __pintentry:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  1330                           
  1331  0004                     interrupt_function:
  1332  007E                     saved_w	set	btemp
  1333  0004  00FE               	movwf	btemp
  1334  0005  0E03               	swapf	3,w
  1335  0006  00F1               	movwf	??_ISR+1
  1336  0007  0804               	movf	4,w
  1337  0008  00F2               	movwf	??_ISR+2
  1338  0009  080A               	movf	10,w
  1339  000A  00F3               	movwf	??_ISR+3
  1340  000B  120A  118A  288E   	ljmp	_ISR
  1341                           
  1342                           	psect	config
  1343                           
  1344                           ;Config register CONFIG1 @ 0x2007
  1345                           ;	Oscillator Selection bits
  1346                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1347                           ;	Watchdog Timer Enable bit
  1348                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1349                           ;	Power-up Timer Enable bit
  1350                           ;	PWRTE = ON, PWRT enabled
  1351                           ;	RE3/MCLR pin function select bit
  1352                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1353                           ;	Code Protection bit
  1354                           ;	CP = OFF, Program memory code protection is disabled
  1355                           ;	Data Code Protection bit
  1356                           ;	CPD = OFF, Data memory code protection is disabled
  1357                           ;	Brown Out Reset Selection bits
  1358                           ;	BOREN = OFF, BOR disabled
  1359                           ;	Internal External Switchover bit
  1360                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1361                           ;	Fail-Safe Clock Monitor Enabled bit
  1362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1363                           ;	Low Voltage Programming Enable bit
  1364                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1365                           ;	In-Circuit Debugger Mode bit
  1366                           ;	DEBUG = 0x1, unprogrammed default
  1367  2007                     	org	8199
  1368  2007  30C4               	dw	12484
  1369                           
  1370                           ;Config register CONFIG2 @ 0x2008
  1371                           ;	Brown-out Reset Selection bit
  1372                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1373                           ;	Flash Program Memory Self Write Enable bits
  1374                           ;	WRT = OFF, Write protection off
  1375  2008                     	org	8200
  1376  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     10      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _division->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1598
                                              8 BANK0      2     2      0
                              _confi
                           _division
 ---------------------------------------------------------------------------------
 (1) _division                                             0     0      0    1598
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _confi                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _confi
   _division
     ___awdiv
     ___awmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Apr 17 20:58:34 2021

                      pc 0002                       l81 01BF                       l75 01C5  
                     l84 0196             ___awdiv@sign 002F                       fsr 0004  
                    l323 008D                      l336 0147                      l800 01B6  
                    l802 01B7                      l804 01B8                      l806 01B9  
                    l808 01BB                      l760 019B                      l770 01A5  
                    l762 019F                      l780 01AC                      l772 01A6  
                    l764 01A0                      _CEN 0036                      l790 01B1  
                    l782 01AD                      l774 01A9                      l766 01A1  
                    l758 0197                      l792 01B2                      l784 01AE  
                    l776 01AA                      l768 01A4                      l794 01B3  
                    l786 01AF                      l778 01AB                      l796 01B4  
                    l788 01B0                      l798 01B5                      l998 0025  
                    _RB0 0030                      _RB1 0031                      u610 007F  
                    u530 002C                      u611 007E                      u531 002B  
                    u620 0084                      u540 0037                      u700 0139  
                    _ISR 008E                      u621 0083                      u605 0073  
                    u541 0036                      u701 0138                      u550 0048  
                    u710 013E                      u630 00F4                      u551 0047  
                    u711 013D                      u631 00F3                      u640 00FF  
                    u641 00FE                      u570 005A                      u650 010A  
                    u571 0059                      u651 0109                      u565 004C  
                    u590 006B                      u670 011C                      u591 006A  
                    u671 011B                      u680 0126                      u585 005B  
                    u681 0125                      u665 010E                      u595 0067  
                    u685 0122                      u695 012D                      _UNI 003A  
                    _res 0034                      fsr0 0004                      indf 0000  
           ___awmod@sign 002F                     ?_ISR 0070                     l1000 0028  
                   l1010 003C                     l1002 002C                     l1020 0052  
                   l1012 0040                     l1004 0031                     l1030 0072  
                   l1022 0056                     l1014 0042                     l1006 0033  
                   l1032 0079                     l1024 005A                     l1016 0048  
                   l1008 0037                     l1026 006B                     l1018 004B  
                   l1034 007F                     l1050 00FB                     l1042 00ED  
                   l1036 0084                     l1028 0071                     l1060 0114  
                   l1052 00FF                     l1044 00F0                     l1038 0089  
                   l1070 0133                     l1062 0118                     l1054 0104  
                   l1046 00F4                     l1064 011C                     l1056 010A  
                   l1072 0139                     l1048 00F9                     l1080 0148  
                   l1074 013E                     l1066 0126                     l1058 010D  
                   l1082 01C0                     l1076 0143                     l1068 012C  
                   l1084 01CA                     _DECE 0038                     _T0IF 005A  
                   _RBIF 0058                     i1l70 00E4                     _TMR0 0001  
                   _cont 0075                     _main 01C0                     btemp 007E  
                   start 000E                    ??_ISR 0070                    ?_main 0070  
        __end_of___awdiv 008E          __end_of___awmod 0148                    _ANSEL 0188  
        ___awdiv@divisor 002A                    i1l950 0092                    i1l960 00A8  
                  i1l952 0095                    i1l970 00C2                    i1l962 00AE  
                  i1l954 009B                    i1l972 00C4                    i1l964 00B0  
                  i1l956 009D                    i1l980 00CF                    i1l948 008E  
                  i1l990 00E3                    i1l982 00D3                    i1l974 00CA  
                  i1l966 00B6                    i1l958 00A3                    i1l984 00D9  
                  i1l968 00BB                    i1l976 00CC                    i1l986 00DD  
                  i1l978 00CE                    i1l988 00E1          ___awdiv@counter 002E  
                  u50_20 00D3                    u50_21 00D2                    u51_20 00D9  
                  u51_21 00D8                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u52_20 00E1                    u52_21 00E0  
                  u46_20 0092                    u46_21 0091                    u47_20 009B  
                  u47_21 009A                    u48_20 00AE                    u48_21 00AD  
                  u49_20 00C2                    u49_21 00C1                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _confi 0197  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01D7                   ??_main 0032  
                 ?_confi 0070         ___awdiv@dividend 002C                   _ANSELH 0189  
       __end_of_division 0197                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0030          ___awmod@divisor 002A          ___awmod@counter 002E  
                 saved_w 007E  __end_of__initialization 0021           __pcstackCOMMON 0070  
           __pidataBANK0 01EA            __end_of_confi 01C0           _OPTION_REGbits 0081  
                ??_confi 0074               __pnvCOMMON 0075               __pmaintext 01C0  
             __pintentry 0004                ?_division 0070                  ___awdiv 0025  
                ___awmod 00ED                  __ptext1 0148                  __ptext2 00ED  
                __ptext3 0025                  __ptext4 0197                  __ptext5 008E  
                _display 0020             __size_of_ISR 005F         ___awmod@dividend 002C  
   end_of_initialization 0021               ??_division 0075                _PORTBbits 0006  
    start_initialization 0011              __end_of_ISR 00ED               init_fetch0 01D7  
            __pdataBANK0 0020              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 002A        __size_of_division 004F                __pnvBANK0 0034  
               ?___awdiv 002A                 ?___awmod 002A           __size_of_confi 0029  
      interrupt_function 0004                 _IOCBbits 0096                 _WPUBbits 0095  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _banderas 0077  
               _division 0148            __size_of_main 0017               _INTCONbits 000B  
               init_ram0 01DB                 intlevel1 0000               _OSCCONbits 008F  
